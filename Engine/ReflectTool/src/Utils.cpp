#include "Utils.h"

#include <filesystem>

namespace InsightReflectTool
{
    namespace Utils
    {
        void WriteGeneratedFileHeader(std::fstream& file)
        {
            if (file.is_open())
            {
                file << "// THIS FILE IS AUTO GENERATED BY THE INSIGHT REFLECT TOOL. ANY MODIFICATIONS WILL BE OVERWRITTEN." << "\n";
                file << "#pragma once" << "\n" << "\n";
            }
        }

        void WriteIncludeFiles(std::fstream& file, std::string_view fileOutputAbsPath, const std::vector<std::string>& filesToInclude)
        {
            for (const std::string& filePath : filesToInclude)
            {
                std::string includePath = std::filesystem::canonical(filePath).generic_string();
                std::string relativeIncludePath = std::filesystem::relative(includePath, fileOutputAbsPath).generic_string();

                file << "#include \"" + relativeIncludePath + "\"\n";
            }
        }

        void ValidateOutputPath(std::string_view path)
        {
            std::string folderPath = std::filesystem::path(path).parent_path().string();
            if (!std::filesystem::exists(folderPath))
            {
                std::filesystem::create_directory(folderPath);
            }
        }
    }
}